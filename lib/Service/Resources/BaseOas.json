{
  "openapi": "3.1.0",
  "info": {
    "title": "Nextcloud OpenRegister API",
    "version": "1.0", 
    "description": "RESTful API for managing registers, schemas, data sources, objects, and audit trails in a Nextcloud environment. This API provides full CRUD operations, advanced filtering, search capabilities, and extensible data management features.",
    "contact": {
      "name": "OpenRegister Development Team",
      "url": "https://www.openregister.app",
      "email": "info@conduction.nl"
    },
    "license": {
      "name": "EUPL-1.2",
      "url": "https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12"
    }
  },
  "servers": [
    {
      "url": "/apps/openregister/api",
      "description": "Base URL for API endpoints"
    }
  ],
  "security": [
    { "basicAuth": [] },
    { "oauth2": ["read", "write"] }
  ],
  "tags": [
    {
      "name": "Generic",
      "description": "Operations related to generic objects"
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Basic authentication using username and password. Not recommended for production use."
      },
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 authentication using Nextcloud's authentication server.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/apps/oauth2/authorize",
            "tokenUrl": "/apps/oauth2/api/v1/token",
            "refreshUrl": "/apps/oauth2/api/v1/token",
            "scopes": {
              "read": "Read access to all resources",
              "write": "Write access to all resources"
            }
          }
        }
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message describing what went wrong",
            "example": "Object not found"
          },
          "code": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 404
          }
        },
        "required": ["error"]
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "Array of result objects",
            "items": {
              "type": "object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of items available",
            "example": 100
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 10
          },
          "limit": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 20
          },
          "offset": {
            "type": "integer",
            "description": "Number of items skipped",
            "example": 0
          }
        }
      },
      "@self": {
        "type": "object",
        "description": "Object metadata including timestamps, ownership, and system information",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the object",
            "example": 123
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique universal identifier for globally unique object identification",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "uri": {
            "type": "string",
            "description": "Uniform Resource Identifier for unique addressable location",
            "example": "/api/objects/123e4567-e89b-12d3-a456-426614174000"
          },
          "version": {
            "type": "string",
            "description": "Semantic version number to track object versions",
            "example": "1.0"
          },
          "register": {
            "type": "integer",
            "description": "Register identifier for object categorization/grouping",
            "example": 123
          },
          "schema": {
            "type": "integer",
            "description": "Schema identifier for data validation reference",
            "example": 123
          },
          "owner": {
            "type": "string",
            "description": "Nextcloud user identifier for object ownership",
            "example": "user-12345"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp for change tracking",
            "example": "2023-05-20T10:15:00Z"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp for lifecycle management",
            "example": "2023-02-15T14:30:00Z"
          }
        }
      }
    }
  }
}
