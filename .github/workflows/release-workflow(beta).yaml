name: Beta Release

on:
  workflow_dispatch:
  push:
    branches:
      - code-refactor/ObjectService

jobs:
  beta-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set app env
        run: echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Determine version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            version="${{ github.event.inputs.version }}"
            sed -i "s|<version>.*</version>|<version>$version</version>|" appinfo/info.xml
          else
            version=$(grep -oP '(?<=<version>)[^<]+' appinfo/info.xml)
          fi
          echo "NEW_VERSION=$version" >> $GITHUB_ENV
          echo "Using version: $version"


      - name: Commit version update (if changed)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if ! git diff --quiet; then
            git commit -am "Set beta version ${{ env.NEW_VERSION }}"
            git push
          else
            echo "No changes to commit"
          fi


      - name: Prepare Signing Certificate and Key
        run: |
          echo "${{ secrets.NEXTCLOUD_SIGNING_CERT }}" > signing-cert.crt
          echo "${{ secrets.NEXTCLOUD_SIGNING_KEY }}" > signing-key.key

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: zip, gd

      - run: npm ci
      - run: npm run build
      - run: composer install --no-dev

      - name: Sign the app
        run: |
          php ./occ integrity:sign-app \
            --privateKey=signing-key.key \
            --certificate=signing-cert.crt \
            --path=.

      - name: Package the app
        run: |
          mkdir -p package/${{ env.APP_NAME }}
          rsync -a --exclude='.*' --exclude='node_modules' --exclude='test' ./ package/${{ env.APP_NAME }}/
          cd package
          tar -czf ../${{ env.APP_NAME }}-${{ env.NEW_VERSION }}.tar.gz ${{ env.APP_NAME }}

      - name: Verify tarball
        run: |
          echo "=== info.xml ==="
          tar -xOf ${{ env.APP_NAME }}-${{ env.NEW_VERSION }}.tar.gz ${{ env.APP_NAME }}/appinfo/info.xml | grep version
          echo "=== signature.json ==="
          tar -tzf ${{ env.APP_NAME }}-${{ env.NEW_VERSION }}.tar.gz | grep signature.json

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: v${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: true

      - name: Upload tarball to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.APP_NAME }}-${{ env.NEW_VERSION }}.tar.gz
          asset_name: ${{ env.APP_NAME }}-${{ env.NEW_VERSION }}.tar.gz
          tag: v${{ env.NEW_VERSION }}
          overwrite: true

      - name: Upload to Nextcloud App Store
        uses: nextcloud-releases/nextcloud-appstore-push-action@v1
        with:
          app_name: ${{ env.APP_NAME }}
          appstore_token: ${{ secrets.NEXTCLOUD_APPSTORE_TOKEN }}
          download_url: https://github.com/${{ github.repository }}/releases/download/v${{ env.NEW_VERSION }}/${{ env.APP_NAME }}-${{ env.NEW_VERSION }}.tar.gz
          app_private_key: ${{ secrets.NEXTCLOUD_SIGNING_KEY }}
          nightly: false
